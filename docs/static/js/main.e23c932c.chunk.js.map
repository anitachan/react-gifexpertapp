{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAehD,OAEI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,QAM3C,SACI,uBACIC,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACL,mCACTC,EAFc,gDAEoCC,UAAUH,GAF9C,6BACL,oCADK,SAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCDRO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,kCAAMA,EAAN,WCDCO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAVAC,qBAAU,WACNxB,EAAWC,GACNwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGvB,CAAEpB,IAEGqB,EDbmBK,CAAe1B,GAAjCO,EAH8B,EAG9BA,KAAMa,EAHwB,EAGxBA,QAQd,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,UACEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQT,EAAKE,KAAM,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADEA,EAAIC,aEnB1BgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,kBAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAU9B,OACK,qCACG,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,6BAEQ2C,EAAWnB,KAAM,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAWA,GADHA,Y,MCnBpC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e23c932c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2)\n            setCategories(cats => [ inputValue, ...cats ]);\n       \n    }\n\n    return (\n        \n        <form onSubmit = { handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange= { handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifts = async( category ) => {\n    const apiKey = 'UFT5xgDFpahjqWz0CIT3KdlTbefThHue';\n    const url   = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${ apiKey }`;\n    const resp = await fetch(url); \n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt= { title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React  from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifs';\nimport { GifGridItem } from '../components/GifGridItem'\n\n\nexport const GifGrid = ( { category }) => {\n\n  \n    const { data, loading } = useFetchGifts( category );\n\n\n    // useEffect( () => {\n    //     getGifts( category )\n    //         .then( setImages);\n    // }, [ category ]); \n   \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category }Â </h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n            <div className=\"card-grid\">\n                { \n                    data.map(  (img)  => (\n                        <GifGridItem \n                            key= { img.id }\n                            { ...img } />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifts } from '../helpers/getGifs';\n\nexport const useFetchGifts = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    useEffect(( ) =>{\n        getGifts ( category )\n            .then( imgs =>{\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    },[ category ])\n\n    return state; // { data: [], loading: true }\n}\n\n","\nimport React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    //const categories = ['One Punch', 'Samurai X', 'Drangon Ball'];\n    const [categories, setCategories] = useState(['Olivia Dunham' ]);\n\n    // const handleAdd = () => {\n    //     setCategories([...categories, 'HunterXHunter']);\n    //     //setCategories(cats => [ ...cats, 'HunterXHunter' ]);\n    // }\n    \n    return (\n         <>\n            <h2>GifExpertApp</h2>\n            <hr/>\n\n            <AddCategory setCategories = { setCategories } />\n\n            <ol>\n                 { \n                    categories.map(  category => \n                         <GifGrid \n                            key = { category }\n                            category={ category } \n                        />\n                    )\n                 }\n            </ol>\n         </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}